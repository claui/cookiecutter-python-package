[tool.mypy]
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
files = "local_extensions/**/*.py,scripts/**/*.py"
implicit_reexport = false
mypy_path = "scripts/stubs"
no_implicit_optional = true
strict_equality = true
warn_redundant_casts = true
warn_return_any = true
warn_unused_ignores = true

[tool.poetry]
name = "cookiecutter-python-package"
description = "Cookiecutter template for generating Python packages"
authors = ["Claudia Pellegrino <clau@tiqua.de>"]
license = "Apache-2.0"
package-mode = false

[tool.poetry.dependencies]
# We’re pinning Python to an exact minor version for compatibility.
# Keep this number in sync with the minimum Python version
# Cookiecutter supports.
python = "~3.7.0"

[tool.poetry.group.dev.dependencies]
black = "^22.12.0"
#
# We’re developing a Cookiecutter template, not a Python package.
# But we’re maintaining a `pyproject.toml` nonetheless because we
# want the benefit of improved IDE support while working on the
# local Jinja extensions.
#
# We’re pinning both the major and minor version for compatibility.
# Keep this in sync with the requirement mentioned in README.md.
cookiecutter = "~2.6.0"
mypy = "^1.4.1"
poethepoet = "^0.16.5"
#
# We’re pinning pylint to a legacy minor version for compatibility
# with the minimum Python version Cookiecutter supports.
# Keep this number in sync with respect to that.
pylint = "^2.13.9"

# Keep these version numbers in sync with Cookiecutter’s `setup.py`.
[tool.poetry.group.provided.dependencies]
binaryornot = ">=0.4.4"
jinja2 = ">=2.7, <4.0.0"
click = ">=7.0,<9.0.0"
pyyaml = ">=5.3.1"
python-slugify = ">=4.0.0"
requests = ">=2.23.0"
arrow = "*"
rich = "*"

[tool.poe]
verbosity = -1

[tool.poe.tasks]
tasks.cmd = "poetry run poe -v"
tasks.help = "List available tasks"
e2e.script = "scripts.e2e:run"
e2e.help = "Run end-to-end test"
linter.cmd = "pylint --enable-all-extensions local_extensions scripts"
linter.help = "Check for style violations"
typecheck.cmd = "mypy"
typecheck.help = "Run static type checker"
