[build-system]
requires = ["poetry-core>=1.9.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "{{ cookiecutter.project_slug }}"
version = "{{ cookiecutter.project_version }}"
description = "{{ cookiecutter.project_description }}"
readme = "README.md"
authors = [
    "{{ cookiecutter.author_full_name }} <{{ cookiecutter.author_email }}>",
]
license = "{{ cookiecutter.project_license }}"

[tool.poetry.dependencies]
python = "~{{ cookiecutter.python_version }}"
{%- if cookiecutter.use_fire == "y" %}
colorama = "*"
{%- endif %}
dataclass-wizard = "~=0.22"
{%- if cookiecutter.use_fire == "y" %}
fire = "*"
{%- endif %}
{%- if cookiecutter.use_pandas == "y" %}
pandas = "*"
{%- endif %}

[tool.poetry.group.dev.dependencies]
autopep8 = "*"
{%- if cookiecutter.use_jupyter == "y" %}
ipykernel = "*"
{%- endif %}
mypy = "~=1.8"
pdoc = "~=14.0"
poethepoet = "~=0.24"
pylint = "~=3.0"
pytest = "*"
{%- if cookiecutter.use_fire == "y" %}
types-colorama = "*"
{%- endif %}

{% if cookiecutter.include_executable == "y" -%}
[tool.poetry.scripts]
{{ cookiecutter.executable_name }} = "{{ cookiecutter.project_slug }}.cli:run"

{% endif -%}
[tool.poe]
verbosity = -1

[tool.poe.tasks]
tasks.cmd = "poe -v"
tasks.help = "List available tasks"
{%- if cookiecutter.use_fire == "y" %}
cli.script = "{{ cookiecutter.project_slug }}.cli:run"
cli.help = "Run command line interface"
{%- endif %}
doc.cmd = "pdoc {{ cookiecutter.project_slug }} !{{ cookiecutter.project_slug }}.settings"
doc.help = "Browse documentation"
{%- if cookiecutter.use_fire == "y" %}
hello.script = "{{ cookiecutter.project_slug }}.cli:run('hello')"
{%- else %}
hello.script = "{{ cookiecutter.project_slug }}.cli:run"
{%- endif %}
hello.help = "Run hello"
linter.cmd = "pylint --enable-all-extensions {{ cookiecutter.project_slug }}"
linter.help = "Check for style violations"
tests.cmd = "pytest"
tests.help = "Run test suite"
typecheck.cmd = "mypy"
typecheck.help = "Run static type checker"

[tool.pyright]
reportUnsupportedDunderAll = "none"

[tool.pytest.ini_options]
testpaths = "tests"
xfail_strict = true
